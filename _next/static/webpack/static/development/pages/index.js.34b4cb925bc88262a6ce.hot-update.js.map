{"version":3,"file":"static/webpack/static/development/pages/index.js.34b4cb925bc88262a6ce.hot-update.js","sources":["webpack:///./src/components/game/tiles/Tile/index.tsx","webpack:///./src/components/game/tiles/TileText/index.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { FunctionComponent } from 'react';\nimport WithoutTextSelection from '@2048/components/core/hoc/WithoutTextSelection';\nimport Center from '@2048/layout/Center';\nimport { Typography } from 'antd';\nimport { TileProps, ColorTileProps } from './model';\nimport TileText from '../TileText';\nconst { Title } = Typography;\n\nconst DefaultTile = styled.div`\n  height: 100%;\n  width: 100%;\n  text-align: center;\n`;\n\nexport const DarkTile: FunctionComponent<ColorTileProps> = ({ cellNum }) => {\n  const DarkTile = styled(DefaultTile)`\n    background: #18202b;\n  `;\n  const StyledTile = WithoutTextSelection(DarkTile);\n  return (\n    <StyledTile>\n      <Center>\n        <TileText>{cellNum}</TileText>\n      </Center>\n    </StyledTile>\n  );\n};\n\nexport const Tile: FunctionComponent<TileProps> = ({ color, ...props }) => {\n  switch (color) {\n    case 'dark':\n      return <DarkTile {...props} />;\n    default:\n  }\n  const StyledTile = WithoutTextSelection(DefaultTile);\n  return (\n    <StyledTile>\n      <Center>\n        <Title level={1}>{props.cellNum}</Title>\n      </Center>\n    </StyledTile>\n  );\n};\n","import { FunctionComponent } from 'react';\nimport { Typography } from 'antd';\nimport styled from 'styled-components';\nimport { TypographyProps } from 'antd/lib/typography/Typography';\n\nconst { Title } = Typography;\n\nexport interface TileTextProps {\n  color: 'white' | 'red' | 'black' | 'blue';\n}\nconst TileText: FunctionComponent<TileTextProps & TypographyProps> = ({\n  color,\n  ...props\n}) => {\n  let htmlColor = '';\n  switch (color) {\n    case 'white':\n      htmlColor = 'white';\n      break;\n    case 'red':\n      htmlColor = 'red';\n      break;\n    case 'black':\n      htmlColor = 'black';\n      break;\n    case 'blue':\n      htmlColor = 'blue';\n      break;\n  }\n  const StyledTitle = styled(Title)`\n    color: ${htmlColor};\n  `;\n  return <StyledTitle {...props}></StyledTitle>;\n};\n\nexport default TileText;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AAGA;AACA;AAIA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAZA;AACA;AAaA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;A","sourceRoot":""}
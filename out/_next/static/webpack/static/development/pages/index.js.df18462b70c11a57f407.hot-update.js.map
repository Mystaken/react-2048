{"version":3,"file":"static/webpack/static/development/pages/index.js.df18462b70c11a57f407.hot-update.js","sources":["webpack:///./src/components/game/Board/index.tsx","webpack:///./src/components/game/tiles/Tile/index.tsx"],"sourcesContent":["import { FunctionComponent, useState, useEffect } from 'react';\nimport { Row, Col } from 'antd';\nimport Anime, { AnimeProps } from '@2048/components/core/Anime';\nimport Squared from '@2048/components/core/Square';\nimport { Tile } from '../tiles/Tile';\nimport { BoardShift } from '@2048/types/game';\nimport { useSelector } from 'react-redux';\nimport { $game } from '@2048/redux/selectors/game.selector';\n\ninterface BoardProps {\n  shift?: BoardShift | null;\n  onShiftEnd?: (shift: BoardShift) => any;\n}\nconst Board: FunctionComponent<BoardProps> = ({ shift, onShiftEnd }) => {\n  const game = useSelector($game);\n  const [groupShift, setGroupShift] = useState<{\n    shift: BoardShift | null;\n    completed: boolean;\n  }>({ shift: null, completed: false });\n\n  function handleShiftComplete(a: anime.AnimeInstance) {\n    if (a.completed && !groupShift.completed) {\n      onShiftEnd && shift && onShiftEnd(shift);\n      setGroupShift(gs => ({ ...gs, completed: true }));\n      groupShift.completed = true;\n    }\n  }\n\n  useEffect(() => {\n    if (shift && groupShift.completed) {\n      setGroupShift({ shift, completed: false });\n    }\n  }, [shift]);\n\n  function generateAnimeProps(\n    shift: BoardShift | null | undefined,\n    x: number,\n    y: number\n  ): AnimeProps {\n    if (\n      !shift ||\n      (y === 0 && shift === 'up') ||\n      (y >= game.height - 1 && shift === 'down') ||\n      (x === 0 && shift === 'left') ||\n      (x >= game.width - 1 && shift === 'right')\n    ) {\n      return { restart: true } as AnimeProps;\n    }\n    let translate: AnimeProps = {};\n    switch (shift) {\n      case 'up':\n        translate = { translateY: '-100%' };\n        break;\n      case 'down':\n        translate = { translateY: '100%' };\n        break;\n      case 'right':\n        translate = { translateX: '100%' };\n        break;\n      case 'left':\n        translate = { translateX: '-100%' };\n        break;\n    }\n    return {\n      ...translate,\n      easing: 'easeInOutCirc',\n      zIndex: 3,\n      duration: 200\n    };\n  }\n\n  return (\n    <Col xs={24} sm={24} md={20} lg={16} xl={12} xxl={8}>\n      {game.board.map((row, y) => (\n        <Row gutter={0} type=\"flex\" justify=\"space-around\" key={y}>\n          {row.map((cell, x) => {\n            const animeProps = generateAnimeProps(shift, x, y);\n            return (\n              <Squared\n                key={x}\n                style={{\n                  border: '1px solid black',\n                  width: `${100 / game.width}%`\n                }}>\n                <Anime complete={handleShiftComplete} {...animeProps}>\n                  <Tile color=\"dark\" cellNum={cell}></Tile>\n                </Anime>\n              </Squared>\n            );\n          })}\n        </Row>\n      ))}\n    </Col>\n  );\n};\n\nexport default Board;\n","import styled from 'styled-components';\nimport { FunctionComponent } from 'react';\nimport WithoutTextSelection from '@2048/components/core/hoc/WithoutTextSelection';\nimport Center from '@2048/layout/Center';\nimport { Typography } from 'antd';\nconst { Title } = Typography;\n\nexport interface TileProps {\n  color?: 'dark';\n  cellNum: number;\n}\n\nconst DefaultTile = styled.div`\n  height: 100%;\n  width: 100%;\n  text-align: center;\n`;\n\nexport const DarkTile: FunctionComponent<TileProps> = ({ cellNum }) => {\n  return <div></div>;\n};\n\nexport const Tile: FunctionComponent<TileProps> = (color, ...props) => {\n  switch (color) {\n    case 'dark':\n      return <DarkTile {...props} />;\n    default:\n  }\n  const StyledTile = WithoutTextSelection(DefaultTile);\n  return (\n    <StyledTile>\n      <Center>\n        <Title level={1}>{props.cellNum}</Title>\n      </Center>\n    </StyledTile>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AAFA;AAKA;AAAA;AAAA;AALA;AAAA;AACA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AAOA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAZA;AACA;AAaA;AAEA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAFA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAhBA;AAqBA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChGA;AAEA;AACA;AAEA;AAOA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAHA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}
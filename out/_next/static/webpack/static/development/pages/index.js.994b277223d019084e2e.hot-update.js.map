{"version":3,"file":"static/webpack/static/development/pages/index.js.994b277223d019084e2e.hot-update.js","sources":["webpack:///./src/redux/reducers/game.reducer.ts"],"sourcesContent":["import { Game, Board } from '@2048/types/game';\nimport { generateEmptyBoard } from '@2048/services/game.service';\nimport { IAction } from '@2048/types/redux';\n\nexport const ACTIONS = {\n  SET_BOARD: 'SET_BOARD',\n  RESET_BOARD: 'RESET_BOARD',\n  INITIALIZE: 'INITIALIZE'\n};\n\nexport interface GameState {\n  game: Game;\n  newCell: [number, number] | null;\n}\n\nconst initialState: GameState = {\n  game: {\n    height: 4,\n    width: 4,\n    board: generateEmptyBoard(4, 4)\n  },\n  newCell: null\n};\n\nexport interface SET_BOARD_ACTION {\n  board: Board;\n  newCell: [number, number] | null;\n}\n\nconst gameReducer = (\n  state: GameState = initialState,\n  action: IAction<string, { board: Board; newCell: [number, number] } | Game>\n): GameState => {\n  switch (action.type) {\n    case ACTIONS.SET_BOARD:\n      return {\n        ...state,\n        game: {\n          ...state.game,\n          board: (action.body as SET_BOARD_ACTION).board\n        },\n        newCell: (action.body as SET_BOARD_ACTION).newCell || state.newCell\n      };\n    case ACTIONS.RESET_BOARD:\n      return {\n        ...initialState\n      };\n    case ACTIONS.INITIALIZE:\n      return {\n        game: action.body as Game,\n        newCell: null\n      };\n    default:\n      return state;\n  }\n};\n\nexport default gameReducer;\n"],"mappings":";;;;;;;;;;;;;;;AACA;AAGA;AACA;AACA;AACA;AAHA;AAWA;AACA;AACA;AACA;AACA;AAHA;AAKA;AANA;AACA;AAaA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AAFA;AAIA;AANA;AACA;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AApBA;AAsBA;AACA;AACA;;;;A","sourceRoot":""}
{"version":3,"file":"static/webpack/static/development/pages/index.js.3b46aefeea63b8c6781b.hot-update.js","sources":["webpack:///./src/layout/Header/index.tsx"],"sourcesContent":["import { Layout, Row, Col, Menu, Button, InputNumber, Tooltip } from 'antd';\nimport { FunctionComponent, useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { $game } from '@2048/redux/selectors/game.selector';\nimport gameAction from '@2048/redux/actions/game.action';\nimport { generateEmptyBoard, addRandomCell } from '@2048/services/game.service';\n\nconst FixedHeader = styled(Layout.Header)`\n  position: fixed;\n  z-index: 1;\n  width: 100%;\n`;\n\nconst Header: FunctionComponent = () => {\n  const game = useSelector($game);\n  const dispatch = useDispatch();\n  const [width, setWidth] = useState(game.width);\n  const [height, setHeight] = useState(game.height);\n\n  function onHeightChange(newHeight: number | undefined) {\n    if (newHeight) {\n      setHeight(newHeight);\n    }\n  }\n  function onWidthChange(newWidth: number | undefined) {\n    if (newWidth) {\n      setWidth(newWidth);\n    }\n  }\n\n  function restart() {\n    const newBoard = generateEmptyBoard(width, height);\n    addRandomCell(newBoard, 2);\n    dispatch(\n      gameAction.initialize({\n        board: newBoard,\n        width,\n        height\n      })\n    );\n  }\n  return (\n    <FixedHeader>\n      <Row>\n        <Col span={24}>\n          <Menu\n            theme=\"dark\"\n            mode=\"horizontal\"\n            defaultSelectedKeys={['2']}\n            style={{ lineHeight: '64px' }}>\n            <Menu.Item key=\"1\">\n              <Tooltip placement=\"topLeft\" title=\"Height\">\n                <InputNumber\n                  min={1}\n                  max={10}\n                  value={height}\n                  onChange={onHeightChange}\n                />\n              </Tooltip>\n            </Menu.Item>\n            <Menu.Item key=\"2\">\n              <InputNumber\n                min={1}\n                max={10}\n                value={width}\n                onChange={onWidthChange}\n              />\n            </Menu.Item>\n            <Menu.Item key=\"3\">\n              <Button onClick={restart}>Restart</Button>\n            </Menu.Item>\n          </Menu>\n        </Col>\n      </Row>\n    </FixedHeader>\n  );\n};\n\nexport default Header;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}